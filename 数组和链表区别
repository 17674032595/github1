数组与链表的优缺点；
数组: 
优点：使用方便 ，查询效率 比链表高，内存为一连续的区域 
缺点：大小固定，不适合动态存储，不方便动态添加 
链表： 
优点：可动态添加删除 大小可变 ，内存可能是不连续内存，链式存储。 
缺点：只能通过顺次指针访问，查询效率低

链表和数组的本质差异
1 在访问方式上 
数组可以随机访问其中的元素 
链表则必须是顺序访问，不能随机访问 
2 空间的使用上 
链表可以随意扩大 
数组则不能

从CPU的角度
CPU 寄存器 – immediate access (0-1个CPU时钟周期) 
CPU L1 缓存 – fast access (3个CPU时钟周期) 
CPU L2 缓存 – slightly slower access (10个CPU时钟周期) 
内存 (RAM) – slow access (100个CPU时钟周期) 
硬盘 (file system) – very slow (10,000,000个CPU时钟周期)

各级别的存储器速度差异非常大，CPU寄存器速度是内存速度的100倍！ 这就是为什么CPU产商发明了CPU缓存。 而这个CPU缓存，就是数组和链表的区别的关键所在。

CPU缓存会把一片连续的内存空间读入，因为数组结构是连续的内存地址，所以数组全部或者部分元素被连续存在CPU缓存里面，平均读取 每个元素的时间只要3个CPU时钟时间。而链表的节点分散在堆空间里面，这时候CPU缓存帮不上忙，只能是去读取内存，平均读取时间需要100个CPU时钟周期。 这样算下来，数组访问的速度比链表快33倍！ （这里只是介绍概念，具体的数字因CPU而异）

总结一下， 各种存储器的速度差异很大，在编程中绝对有必要考虑这个因素。 比如，内存速度比硬盘快1万倍，所以程序中应该尽量避免频繁的硬盘读写；CPU缓存比内存快几十倍，在程序中尽量多加利用。
